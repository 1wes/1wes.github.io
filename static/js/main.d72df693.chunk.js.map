{"version":3,"sources":["components/Header&Footer/Header.js","components/Header&Footer/Footer.js","components/Header&Footer/Layout.js","App.js","components/Instructions/how-to-play.js","index.js"],"names":["Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","window","onscroll","stickNavbar","navbar","document","getElementById","scrollY","style","top","backgroundColor","position","width","react_default","a","createElement","id","react_router_dom","to","React","Component","Instructions","className","textDecoration","react_router","currentYear","Date","getFullYear","Footer","index_es","icon","faCopyright","Layout","components_Header_Footer_Header","Header_Footer_Footer","Square","props","type","onClick","ReactGA","initialize","displayxCounter","Board","i","_this","squares","displaySquare","lsxCounter","localStorage","getItem","retrievedxCounter","parseInt","isNaN","displayoCounter","lsoCounter","retrievedoCounter","displaydrawCounter","lsdrawCounter","retrieveddrawCounter","Game","_React$Component2","_this2","call","handleClick","state","slice","calculateTheWinner","xIsNext","setState","handleCounterReset","length","confirm","clear","location","reload","alert","Array","fill","bind","assertThisInitialized","pageview","pathname","nextPlayer","_this3","winner","Header_Footer_Layout","App_Board","Button","variant","size","color","fullWidth","winnerCombinations","_winnerCombinations$i","slicedToArray","b","c","setItem","xCounter","toString","latestxCounter","oCounter","latestoCounter","setInterval","includes","drawCounter","latestdrawCounter","height","src","title","frameborder","allow","allowfullscreen","Howtoplay","how_to_play_Instructions","ReactDOM","createRoot","render","hashType","path","element","src_App","Instructions_how_to_play"],"mappings":"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","file":"static/js/main.d72df693.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport {Link} from 'react-router-dom';\n\nclass Header extends React.Component{\n\n    // make the header sticky on scroll\n    componentDidMount(){\n\n        window.onscroll=()=>{\n            stickNavbar();\n        }\n\n        let navbar=document.getElementById(\"nav-bar\");\n\n        let stickNavbar=()=>{\n\n            // if horizontal scroll is greater than position of the navbar\n            if(window.scrollY>60){\n                navbar.style.top='0';\n                navbar.style.backgroundColor='rgba(0, 0, 0, 0.9)';\n                navbar.style.position='fixed';\n                navbar.style.width='100%'\n            }else{\n                navbar.style.top='-60px'\n            }\n        }\n    }\n\n    render(){\n\n        return(\n            \n            <nav id='nav-bar'>\n                <ul>\n                    <li>\n                        <Link id='header-banner' to='/'>tic-tac-toe</Link>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\nexport default Header;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCopyright} from '@fortawesome/free-solid-svg-icons'\nimport {Link, Outlet} from 'react-router-dom';\n\nfunction Instructions(){\n\n    return(\n        <div className='how-to-play'>\n            <div className=\"instructions-link\">\n                <Link to=\"/instructions\" style={{textDecoration:\"none\"}}>\n                    How to Play?\n                </Link>\n            </div>\n            <Outlet />\n        </div>\n    )\n}\n\nlet currentYear=new Date().getFullYear();\n\nclass Footer extends React.Component{\n\n    render(){\n\n        return(\n            <footer className='footer'>\n                <div className='footer_details'>\n                    <div>\n                        <Instructions />\n                    </div>\n                    <span>\n                        <span className='copyright-icon'><FontAwesomeIcon icon={faCopyright} /></span>\n                        Wes <span className='copyright_year'>{currentYear}</span>\n                    </span>\n                </div>\n            </footer>\n        )\n    }\n}\nexport default Footer;","import Header from \"./Header\";\nimport Footer from './Footer';\nimport React from 'react';\n\nclass Layout extends React.Component{\n\n    render(){\n\n        return(\n            <div>\n                <Header />\n                <Footer />\n            </div>\n        )\n    }\n}\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport ReactGA from 'react-ga';\nimport Button from '@mui/material/Button';\nimport Layout from './components/Header&Footer/Layout';\n\n// intialize the property tracking ID\nconst tracking_id=\"G-1R65DNZP1P\";\n\nReactGA.initialize(tracking_id);\n\n// render the button\nfunction Square(props){\n\n    return(\n        <button type='button' className='square' onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\n// renders nine squares\nclass Board extends React.Component{\n\n    // method to return the squares with a passed value\n    displaySquare(i){\n        return(\n            <Square value={this.props.squares[i]}  onClick={()=>this.props.onClick(i)}/>\n        )\n    }\n\n    render(){\n        \n        return(\n            <div>\n                {/* use div to display a bunch of three blocks and not inline squares */}\n                <div className='board-row'>\n                    {this.displaySquare(0)}\n                    {this.displaySquare(1)}\n                    {this.displaySquare(2)}\n                </div>\n\n                <div className='board-row'>\n                    {this.displaySquare(3)}\n                    {this.displaySquare(4)}\n                    {this.displaySquare(5)}\n                </div>\n\n                <div className='board-row'>\n                    {this.displaySquare(6)}\n                    {this.displaySquare(7)}\n                    {this.displaySquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\n\n// player X win counter\nlet lsxCounter=localStorage.getItem(\"localStoragexCounter\");\n\nlet retrievedxCounter=parseInt(lsxCounter, 10);\n\nlet displayxCounter;\n\nif(isNaN(retrievedxCounter)){\n    displayxCounter=0\n}else{\n    displayxCounter=retrievedxCounter;\n}\n\n// player O win counter\nlet lsoCounter=localStorage.getItem(\"localStorageoCounter\");\n\nlet retrievedoCounter=parseInt(lsoCounter, 10);\n\nlet displayoCounter;\n\nif(isNaN(retrievedoCounter)){\n    displayoCounter=0\n}else{\n    displayoCounter=retrievedoCounter;\n}\n\n// draw counter\nlet lsdrawCounter=localStorage.getItem(\"localStorageDrawCounter\");\n\nlet retrieveddrawCounter=parseInt(lsdrawCounter, 10);\n\nlet displaydrawCounter;\n\nif(isNaN(retrieveddrawCounter)){\n    displaydrawCounter=0\n}else{\n    displaydrawCounter=retrieveddrawCounter;\n}\n\n// render a board with placeholder values (0-8)\nclass Game extends React.Component{\n        // on this page/component being added to a tree, \n    componentDidMount(){\n\n        // tracking the page views\n        ReactGA.pageview(window.location.pathname);\n    }\n\n    constructor(props){\n        super(props);\n\n        // declare state of nine null values in an array\n        this.state={\n            // fill each square in the array with a null value\n            squares:Array(9).fill(null),\n            // set player X as the default --or first player\n            xIsNext:true, \n        }\n\n        this.handleCounterReset=this.handleCounterReset.bind(this);\n    }\n\n    handleClick=(i)=>{\n        // create a copy of the array that will be modified --immutabillity\n        const squares=this.state.squares.slice();\n\n        // check if a player has won or the square is clicked\n        if(calculateTheWinner(squares) || squares[i]){\n            return;\n        }\n\n        // check which player is next --turn taking\n        squares[i]=this.state.xIsNext? 'X':'O';\n\n        this.setState({\n            squares:squares,\n            // update the next player\n            xIsNext:!this.state.xIsNext, \n        })\n\n    }\n\n    handleCounterReset=()=>{\n        // check if the counter is at zero\n        if(localStorage.length>0){\n\n            if(window.confirm(\"This action will reset the Counter to 0 !\")===true){\n                localStorage.clear();\n\n                window.location.reload(true)\n            }else{\n                // do nothing\n            }\n        }else{\n            alert(\"The counter is already at 0!\")\n        }\n    }\n    \n    render(){\n\n        const winner=calculateTheWinner(this.state.squares);\n\n        let nextPlayer;\n\n        // if two of the responses are not returning draw   \n        if(winner && winner!=='draw'){\n            \n            nextPlayer='Winner is: ' + winner +' !' \n\n        }else if(winner && winner==='draw'){\n            nextPlayer='It is a ' + winner+' !'\n        }\n        else{\n            nextPlayer='Next player is: ' + (this.state.xIsNext? 'X':'O')\n        }\n\n        return(\n            <div>\n                <Layout />\n\n                <div className='game'>\n                    <div className='game-board'>\n                        <div className='nextPlayer'>\n                            {nextPlayer}\n                        </div>\n                        \n                        < Board squares={this.state.squares} onClick={(i)=>this.handleClick(i)}/>\n                    </div>\n\n                    <div className='game-info'> \n                        <div>\n\n                            <div className='winner-count-header'>\n                                Winner count\n                            </div>\n\n                            <div className='winner-counter'>\n                                <div className=\"display-counter\">X: <span>{displayxCounter}</span></div>\n                                <div className=\"display-counter\">Draw: <span>{displaydrawCounter}</span></div>\n                                <div className=\"display-counter\">O: <span>{displayoCounter}</span> </div>\n                            </div>\n                            \n                            <div className=\"reset-counter-button\">\n                                <Button variant=\"outlined\" size=\"small\" color='error' id=\"reset-button\" fullWidth onClick={this.handleCounterReset}>\n                                    Reset Counter\n                                </Button>\n                            </div>\n                        </div>\n\n                        <div className=\"\"></div>\n\n                    </div>\n\n                </div>\n            </div>\n            \n        )\n    }\n}\nexport default Game;\n\nfunction calculateTheWinner(squares){\n\n    const winnerCombinations=[\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ];\n\n    // compare whether any of the combinations has been achieved\n    for(let i=0; i<winnerCombinations.length; i++){\n\n        const [a, b, c] =winnerCombinations[i];\n\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n\n            // set timer before reloading\n            if(squares[a]===\"X\"){\n\n                if(localStorage.getItem(\"localStoragexCounter\")===null){\n\n                    localStorage.setItem(\"localStoragexCounter\", \"0\")\n    \n                }else{\n                    let xCounter=localStorage.getItem(\"localStoragexCounter\");\n    \n                    localStorage.setItem(\"localStoragexCounter\", xCounter.toString())\n                }\n\n                let latestxCounter=parseInt(localStorage.getItem(\"localStoragexCounter\"), 10);\n\n                latestxCounter=latestxCounter+1;\n\n                localStorage.setItem(\"localStoragexCounter\", latestxCounter.toString());\n\n            }else{\n                if(localStorage.getItem(\"localStorageoCounter\")===null){\n\n                    localStorage.setItem(\"localStorageoCounter\", \"0\");\n    \n                }else{\n    \n                    let oCounter=localStorage.getItem(\"localStorageoCounter\");\n    \n                    localStorage.setItem(\"localStorageoCounter\", oCounter.toString());\n                }\n\n                let latestoCounter=parseInt(localStorage.getItem(\"localStorageoCounter\"), 10);\n\n                latestoCounter=latestoCounter+1;\n\n                localStorage.setItem(\"localStorageoCounter\", latestoCounter.toString());\n            }\n\n            setInterval(()=>{\n\n                window.location.reload(true);\n                \n            }, 1000);\n\n            return squares[a]; \n\n        }else if(!squares.includes(null)){\n\n            if(localStorage.getItem(\"localStorageDrawCounter\")===null){\n\n                localStorage.setItem(\"localStorageDrawCounter\", \"0\");\n            }else{\n\n                let drawCounter=localStorage.getItem(\"localStorageDrawCounter\");\n\n                localStorage.setItem(\"localStorageDrawCounter\", drawCounter.toString());\n            }\n\n            let latestdrawCounter=parseInt(localStorage.getItem(\"localStorageDrawCounter\"), 10);\n\n            latestdrawCounter=latestdrawCounter+1;\n\n            localStorage.setItem(\"localStorageDrawCounter\", latestdrawCounter.toString());\n\n            setInterval(()=>{\n\n                window.location.reload(true);\n\n            }, 1000);\n\n            return 'draw';\n        }\n    }\n\n    // game continues since theres no winner or draw yet\n    return null;\n}","import React from 'react';\nimport Layout from '../Header&Footer/Layout'\nimport './how-to-play.css'\n\nfunction Instructions(){\n\n    return(\n        <main className='main-container' style={{color:\"whitesmoke\"}}>\n            <h3>\n                How to play Tic-Tac-Toe\n            </h3>\n\n            {/* container for instructions */}\n            <div>\n\n                {/* container with the layout */}\n                <div className='main-content'>\n                    <ul className='instructions-list'>\n                        <li className='instruction'>\n                            <div className='instruction-number'>\n                                <span>1</span> \n                            </div>\n\n                            <p> The game is played on a grid that's 3 squares by 3 squares.</p>\n                        </li>\n                        <li className='instruction'>\n                            <div className='instruction-number'>\n                                <span>2</span> \n                            </div>\n\n                            <p>One player is <span id='x'>X</span>, and the other is <span id='o'>O</span>. Players take turns putting their marks in empty squares</p>\n                        </li>\n                        <li className='instruction'>\n                            <div className='instruction-number'>\n                                <span>3</span>\n                            </div>\n\n                            <p>The first player to get 3 of their marks in a row (up, down, across, or diagonally) is the winner</p>\n\n                        </li>\n\n                        <li className='instruction'>\n                            <div className='instruction-number'>\n                                <span>4</span>\n                            </div>\n\n                            <p>When all 9 squares are full, the game is over. If no player has 3 marks in a row, the game ends in a tie.</p>\n                        </li>\n\n                    </ul>\n\n                    <div className='video-option'>\n                        or do you prefer to watch a video?\n                    </div>\n\n                    <div className='video-player'>\n                        <iframe className='video-frame' width=\"700\" height=\"275\" src=\"https://www.youtube.com/embed/5SdW0_wTX5c\" title=\"YouTube video player\" \n                            frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                            allowfullscreen>\n                        </iframe>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nclass Howtoplay extends React.Component{\n\n    render(){\n\n        return(\n            <div>\n                <Layout />\n\n                <Instructions />\n            </div>\n        )\n    }\n}\nexport default Howtoplay;","import ReactDOM from 'react-dom/client';\nimport React from 'react';\nimport Game from './App';\nimport {HashRouter, Routes, Route} from 'react-router-dom'\nimport Howtoplay from './components/Instructions/how-to-play';\n\nconst root=ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  // all rendering goes inside HashRouter\n  // enables storing the URL in the hash portion since it cannot be sent to the server in github Pages\n\n  <HashRouter hashType='slash'>\n    <Routes>\n      <Route path='/' element={<Game/>} />\n      <Route path='instructions' element={<Howtoplay/>} />\n    </Routes>\n  </HashRouter>\n);"],"sourceRoot":""}